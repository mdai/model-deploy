{
  "multi_gpu": false,
  "amp": true,
  "dont_load_ts_model": false,
  "dont_load_ckpt_model": true,
  "model": [
    {
      "ts_path": "{MMAR_TORCHSCRIPT}",
      "disabled": "{dont_load_ts_model}"
    },
    {
      "name": "UNet",
      "disabled": "{dont_load_ckpt_model}",
      "args": {
        "dimensions": 3,
        "in_channels": 1,
        "out_channels": 2,
        "channels": [16, 32, 64, 128, 256],
        "strides": [2, 2, 2, 2],
        "num_res_units": 2,
        "norm": "batch"
      }
    }
  ],
  "pre_transforms": [
    {
      "name": "LoadImaged",
      "args": {
        "keys": [
          "image",
          "label"
        ]
      }
    },
    {
      "name": "EnsureChannelFirstd",
      "args": {
        "keys": [
          "image",
          "label"
        ]
      }
    },
    {
      "name": "CopyItemsd",
      "args": {
        "keys": [
          "label"
        ],
        "times": 1,
        "names": ["label_foreground"]
      }
    },
    {
      "name": "Spacingd",
      "args": {
        "keys": ["image"],
        "pixdim": [1.0, 1.0, 1.0],
        "mode": ["bilinear"],
        "align_corners": [true]
      }
    },
    {
      "name": "ScaleIntensityRanged",
      "args": {
        "keys": "image",
        "a_min": -57,
        "a_max": 164,
        "b_min": 0.0,
        "b_max": 1.0,
        "clip": true
      }
    },
    {
      "name": "CropForegroundd",
      "args": {
        "keys": ["image"],
        "source_key": "image"
      }
    },
    {
      "name": "ToTensord",
      "args": {
        "keys": [
          "image",
          "label"
        ]
      }
    }
  ],
  "dataset": {
    "name": "Dataset",
    "data_list_file_path": "{DATASET_JSON}",
    "data_file_base_dir": "{DATA_ROOT}",
    "data_list_key": "testing"
  },
  "dataloader": {
    "name": "DataLoader",
    "args": {
      "batch_size": 1,
      "shuffle": false,
      "num_workers": 4
    }
  },
  "inferer": {
    "name": "SlidingWindowInferer",
    "args": {
      "roi_size": [
        160,
        160,
        160
      ],
      "sw_batch_size": 4,
      "overlap": 0.6
    }
  },
  "handlers": [
    {
      "name": "CheckpointLoader",
      "disabled": "{dont_load_ckpt_model}",
      "args": {
        "load_path": "{MMAR_CKPT}",
        "load_dict": ["model"]
      }
    },
    {
      "name": "StatsHandler",
      "rank": 0,
      "args": {
        "output_transform": "lambda x: None"
      }
    },
    {
      "name": "TransformInverter",
      "args": {
        "output_keys": ["pred"],
        "batch_keys": "image",
        "postfix": "inverted",
        "nearest_interp": false
      }
    },
    {
      "name": "SegmentationSaver",
      "args": {
        "resample": false,
        "output_dir": "{MMAR_EVAL_OUTPUT_PATH}",
        "batch_transform": "lambda x: x['image_meta_dict']",
        "output_transform": "lambda x: __import__('monai').transforms.AsDiscrete(argmax=True, to_onehot=False, n_classes=2)(x['pred_inverted'][0][None].detach().cpu())"
      }
    },
    {
      "name": "MetricsSaver",
      "args": {
        "save_dir": "{MMAR_EVAL_OUTPUT_PATH}",
        "metrics": ["val_mean_dice", "val_acc"],
        "metric_details": ["val_mean_dice"],
        "batch_transform": "lambda x: x['image_meta_dict']",
        "summary_ops": "*",
        "save_rank": 0
      }
    }
  ],
  "post_transforms": [
    {
      "name": "Activationsd",
      "args": {
        "keys": "pred",
        "softmax": true
      }
    },
    {
      "name": "AsDiscreted",
      "args": {
        "keys": ["label"],
        "argmax": [false],
        "to_onehot": true,
        "n_classes": 2
      }
    }
  ],
  "metrics": [
    {
      "name": "MeanDice",
      "log_label": "val_mean_dice",
      "is_key_metric": true,
      "args": {
        "include_background": false,
        "output_transform": "lambda x: (__import__('monai').transforms.AsDiscrete(argmax=True, to_onehot=True, n_classes=2)(x['pred_inverted'][0][None].detach().cpu()), x['label'].detach().cpu())"
      }
    },
    {
      "name": "Accuracy",
      "log_label": "val_acc",
      "args": {
        "output_transform": "lambda x: (__import__('monai').transforms.AsDiscrete(argmax=True, to_onehot=True, n_classes=2)(x['pred_inverted'][0][None].detach().cpu()), x['label'].detach().cpu())"
      }
    }
  ],
  "evaluator": {
    "name": "SupervisedEvaluator"
  }
}
